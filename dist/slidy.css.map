{"version":3,"sources":["../../node_modules/kouto-swiss/lib/kouto-swiss/reset/box-sizing-reset.styl","../../node_modules/kouto-swiss/lib/kouto-swiss/mixins/vendors.styl","../../node_modules/kouto-swiss/lib/kouto-swiss/reset/normalize.styl","../../node_modules/kouto-swiss/lib/kouto-swiss/mixins/vendors-flex.styl","../../node_modules/kouto-swiss/lib/kouto-swiss/utilities/position.styl","../../node_modules/kouto-swiss/lib/kouto-swiss/utilities/overflow.styl","slidy.styl","../../node_modules/axis/axis/typography.styl","../../node_modules/axis/axis/code.styl"],"names":[],"mappings":"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","file":"slidy.css","sourcesContent":["ks-box-sizing-reset()\n    if selector() is \"&\"\n        html\n            box-sizing: border-box\n\n        *, *:before, *:after\n            box-sizing: inherit\n    else\n        *, *:before, *:after\n            box-sizing: border-box\n\nbox-sizing-reset = ks-box-sizing-reset unless ks-no-conflict\n","ks-vendors-prefixes = recommended\n\nks-vendor( property, value, feature = null, prefixes = null, official = true )\n    unless \"vendor\" in called-from\n        if feature isnt null and !( feature in ks-support-ignore-features )\n            for prefix in caniuse-prefixes( feature )\n                prefixedproperty = \"-\" + prefix + \"-\" + property\n                {prefixedproperty}: value\n        else if ks-vendors-prefixes isnt false\n                if ks-vendors-prefixes isnt recommended\n                    prefixes = ks-vendors-prefixes\n                if prefixes\n                    for prefix in prefixes\n                        prefixedproperty = \"-\" + prefix + \"-\" + property\n                        {prefixedproperty}: value\n    if official\n        {property}: value\n\nvendor = ks-vendor unless ks-no-conflict\n\nunless ks-no-conflict\n    animation()\n        ks-vendor( \"animation\", arguments, feature: \"css-animation\" )\n    animation-delay()\n        ks-vendor( \"animation-delay\", arguments, feature: \"css-animation\" )\n    animation-direction()\n        ks-vendor( \"animation-direction\", arguments, feature: \"css-animation\" )\n    animation-duration()\n        ks-vendor( \"animation-duration\", arguments, feature: \"css-animation\" )\n    animation-fill-mode()\n        ks-vendor( \"animation-fill-mode\", arguments, feature: \"css-animation\" )\n    animation-iteration-count()\n        ks-vendor( \"animation-iteration-count\", arguments, feature: \"css-animation\" )\n    animation-name()\n        ks-vendor( \"animation-name\", arguments, feature: \"css-animation\" )\n    animation-play-state()\n        ks-vendor( \"animation-play-state\", arguments, feature: \"css-animation\" )\n    animation-timing-function()\n        ks-vendor( \"animation-timing-function\", arguments, feature: \"css-animation\" )\n\n    appearance()\n        ks-vendor( \"appearance\", arguments, prefixes: webkit moz )\n\n    backface-visibility()\n        ks-vendor( \"backface-visibility\", arguments, prefixes: webkit ms )\n\n    background-clip()\n        ks-vendor( \"background-clip\", arguments, feature: \"background-img-opts\" )\n    background-origin()\n        ks-vendor( \"background-origin\", arguments, feature: \"background-img-opts\" )\n    background-size()\n        ks-vendor( \"background-size\", arguments, feature: \"background-img-opts\" )\n\n    border-image-source()\n        ks-vendor( \"border-image-source\", arguments, feature: \"border-image\" )\n    border-image-slice()\n        ks-vendor( \"border-image-slice\", arguments, feature: \"border-image\" )\n    border-image-width()\n        ks-vendor( \"border-image-width\", arguments, feature: \"border-image\" )\n    border-image-outset()\n        ks-vendor( \"border-image-outset\", arguments, feature: \"border-image\" )\n    border-image-repeat()\n        ks-vendor( \"border-image-repeat\", arguments, feature: \"border-image\" )\n    border-image()\n        ks-vendor( \"border-image\", arguments, feature: \"border-image\" )\n\n    box-shadow()\n        ks-vendor( \"box-shadow\", arguments, feature: \"css-boxshadow\" )\n\n    box-sizing()\n        ks-vendor( \"box-sizing\", arguments, feature: \"css3-boxsizing\" )\n\n    clip-path()\n        ks-vendor( \"clip-path\", arguments, feature: \"css-clip-path\" )\n\n    column-count()\n        ks-vendor( \"column-count\", arguments, feature: \"multicolumn\" )\n    column-fill()\n        ks-vendor( \"column-fill\", arguments, feature: \"multicolumn\" )\n    column-gap()\n        ks-vendor( \"column-gap\", arguments, feature: \"multicolumn\" )\n    column-rule()\n        ks-vendor( \"column-rule\", arguments, feature: \"multicolumn\" )\n    column-rule-color()\n        ks-vendor( \"column-rule-color\", arguments, feature: \"multicolumn\" )\n    column-rule-style()\n        ks-vendor( \"column-rule-style\", arguments, feature: \"multicolumn\" )\n    column-rule-width()\n        ks-vendor( \"column-rule-width\", arguments, feature: \"multicolumn\" )\n    column-span()\n        ks-vendor( \"column-span\", arguments, feature: \"multicolumn\")\n    column-width()\n        ks-vendor( \"column-width\", arguments, feature: \"multicolumn\" )\n    columns()\n        ks-vendor( \"columns\", arguments, feature: \"multicolumn\" )\n\n    grid()\n        ks-vendor( \"grid\", arguments, feature: \"css-grid\" )\n    grid-area()\n        ks-vendor( \"grid-area\", arguments, feature: \"css-grid\" )\n    grid-auto-columns()\n        ks-vendor( \"grid-auto-columns\", arguments, feature: \"css-grid\" )\n    grid-auto-flow()\n        ks-vendor( \"grid-auto-flow\", arguments, feature: \"css-grid\" )\n    grid-auto-position()\n        ks-vendor( \"grid-auto-position\", arguments, feature: \"css-grid\" )\n    grid-auto-rows()\n        ks-vendor( \"grid-auto-rows\", arguments, feature: \"css-grid\" )\n    grid-column()\n        ks-vendor( \"grid-column\", arguments, feature: \"css-grid\" )\n    grid-column-end()\n        ks-vendor( \"grid-column-end\", arguments, feature: \"css-grid\" )\n    grid-column-start()\n        ks-vendor( \"grid-column-start\", arguments, feature: \"css-grid\" )\n    grid-row()\n        ks-vendor( \"grid-row\", arguments, feature: \"css-grid\" )\n    grid-row-end()\n        ks-vendor( \"grid-row-end\", arguments, feature: \"css-grid\" )\n    grid-row-start()\n        ks-vendor( \"grid-row-start\", arguments, feature: \"css-grid\" )\n    grid-template()\n        ks-vendor( \"grid-template\", arguments, feature: \"css-grid\" )\n    grid-template-areas()\n        ks-vendor( \"grid-template-areas\", arguments, feature: \"css-grid\" )\n    grid-template-columns()\n        ks-vendor( \"grid-template-columns\", arguments, feature: \"css-grid\" )\n    grid-template-rows()\n        ks-vendor( \"grid-template-rows\", arguments, feature: \"css-grid\" )\n\n    hyphens()\n        ks-vendor( \"hyphens\", arguments, feature: \"css-hyphens\" )\n\n    justify-content()\n        ks-vendor( \"justify-content\", arguments, feature: \"flexbox\" )\n\n    mask()\n        ks-vendor( \"mask\", arguments, feature: \"css-masks\" )\n\n    opacity( value )\n        if value == inherit or value == initial\n            -ms-filter value\n            filter value\n        else\n            val = round( value * 100 )\n            if val == 100\n                -ms-filter: none\n                filter: none\n            else\n                -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val\n                filter: 'alpha(opacity=%s)' % val\n        opacity: value\n\n    order()\n        ks-vendor( \"order\", arguments, feature: \"flexbox\" )\n\n    perspective()\n        if current-property[ 0 ] is \"perspective\"\n            ks-vendor( \"perspective\", arguments, feature: \"transforms3d\" )\n        else\n            unquote( \"perspective(\" + arguments + \")\" )\n\n    perspective-origin()\n        ks-vendor( \"perspective-origin\", arguments, feature: \"transforms3d\" )\n\n    transform()\n        ks-vendor( \"transform\", arguments, feature: \"transforms2d\" )\n    transform-origin()\n        ks-vendor( \"transform-origin\", arguments, feature: \"transforms2d\" )\n    transform-style()\n        ks-vendor( \"transform-style\", arguments, feature: \"transforms3d\" )\n\n    transition()\n        ks-vendor( \"transition\", arguments, feature: \"css-transitions\" )\n    transition-delay()\n        ks-vendor( \"transition-delay\", arguments, feature: \"css-transitions\" )\n    transition-duration()\n        ks-vendor( \"transition-duration\", arguments, feature: \"css-transitions\" )\n    transition-property()\n        ks-vendor( \"transition-property\", arguments, feature: \"css-transitions\" )\n    transition-timing-function()\n        ks-vendor( \"transition-timing-function\", arguments, feature: \"css-transitions\" )\n\n    user-select( value )\n        ks-vendor( \"user-select\", arguments, feature: \"user-select-none\" )\n","ks-normalize()\n    html\n        font-family: sans-serif\n        -ms-text-size-adjust: 100%\n        -webkit-text-size-adjust: 100%\n\n    body\n        margin: 0\n\n    article\n    aside\n    details\n    figcaption\n    figure\n    footer\n    header\n    hgroup\n    main\n    nav\n    section\n    summary\n        display: block\n\n    audio\n    canvas\n    progress\n    video\n        display: inline-block\n        vertical-align: baseline\n\n    audio:not([controls])\n        display: none\n        height: 0\n\n    [hidden],\n    template\n        display: none\n\n    a\n        background: transparent\n\n    a:active\n    a:hover\n        outline: 0\n\n    abbr[title]\n        border-bottom: 1px dotted\n\n    b\n    strong\n        font-weight: bold\n\n    dfn\n        font-style: italic\n\n    h1\n        font-size: 2em\n        margin: 0.67em 0\n\n    mark\n        background: #ff0\n        color: #000\n\n    small\n        font-size: 80%\n\n    sub\n    sup\n        font-size: 75%\n        line-height: 0\n        position: relative\n        vertical-align: baseline\n\n    sup\n        top: -0.5em\n\n    sub\n        bottom: -0.25em\n\n    img\n        border: 0\n\n    svg:not(:root)\n        overflow: hidden\n\n    figure\n        margin: 1em 40px\n\n    hr\n        box-sizing: content-box\n        height: 0\n\n    pre\n        overflow: auto\n\n    code\n    kbd\n    pre\n    samp\n        font-family: monospace, monospace\n        font-size: 1em\n\n    button\n    input\n    optgroup\n    select\n    textarea\n        color: inherit\n        font: inherit\n        margin: 0\n\n    button\n        overflow: visible\n\n    button\n    select\n        text-transform: none\n\n    button\n    html input[type=\"button\"]\n    input[type=\"reset\"]\n    input[type=\"submit\"]\n        -webkit-appearance: button\n        cursor: pointer\n\n    button[disabled]\n    html input[disabled]\n        cursor: default\n\n    button::-moz-focus-inner\n    input::-moz-focus-inner\n        border: 0\n        padding: 0\n\n    input\n        line-height: normal\n\n    input[type=\"checkbox\"]\n    input[type=\"radio\"]\n        box-sizing: border-box\n        padding: 0\n\n    input[type=\"number\"]::-webkit-inner-spin-button\n    input[type=\"number\"]::-webkit-outer-spin-button\n        height: auto\n\n    input[type=\"search\"]\n        -webkit-appearance: textfield\n        box-sizing: content-box\n\n    input[type=\"search\"]::-webkit-search-cancel-button,\n    input[type=\"search\"]::-webkit-search-decoration\n        -webkit-appearance: none\n\n    fieldset\n        border: 1px solid #c0c0c0\n        margin: 0 2px\n        padding: 0.35em 0.625em 0.75em\n\n    legend\n        border: 0\n        padding: 0\n\n    textarea\n        overflow: auto\n\n    optgroup\n        font-weight: bold\n\n    table\n        border-collapse: collapse\n        border-spacing: 0\n\n    td\n    th\n        padding: 0\n\nnormalize = ks-normalize unless ks-no-conflict\n","_ks-support-old-flex-implementation()\n    return ks-support-safari <= 6 or ks-support-android-browser <= 4.3 or ks-support-chrome <= 20 or ks-support-ios-safari <= 6.1 or ks-support-blackberry-browser <= 7\n\nks-display( value, args... )\n    if value == flex\n        if ks-vendors-prefixes isnt false and !( flex in ks-support-ignore-features ) and !( flexbox in ks-support-ignore-features )\n            if _ks-support-old-flex-implementation()\n                display: -webkit-box args\n            for prefix in caniuse-prefixes( \"flexbox\" )\n                if prefix is \"webkit\"\n                    display: -webkit-flex args\n                if prefix is \"moz\"\n                    display: -moz-box args\n                if prefix is \"ms\"\n                    display: -ms-flexbox args\n        display: flex args\n    else if value == inline-flex\n        if ks-vendors-prefixes isnt false and !( flex in ks-support-ignore-features ) and !( flexbox in ks-support-ignore-features )\n            for prefix in caniuse-prefixes( \"flexbox\" )\n                display: unquote( \"-\" + prefix + \"-inline-flex\" ) args\n        display: inline-flex args\n    else\n        display: value args\n\ndisplay = ks-display unless ks-no-conflict\n\nunless ks-no-conflict\n    flex-grow()\n        ks-vendor( \"flex-grow\", arguments, feature: \"flexbox\" )\n\n    flex-basis()\n        ks-vendor( \"flex-basis\", arguments, feature: \"flexbox\" )\n\n    flex-direction( value, args... )\n        if ks-vendors-prefixes isnt false and !( flex in ks-support-ignore-features ) and !( flexbox in ks-support-ignore-features )\n            if _ks-support-old-flex-implementation()\n                if value is row\n                    -webkit-box-orient: vertical args\n                    -webkit-box-direction: normal args\n                if value is row-reverse\n                    -webkit-box-orient: vertical args\n                    -webkit-box-direction: reverse args\n                if value is column\n                    -webkit-box-orient: horizontal args\n                    -webkit-box-direction: normal args\n                if value is column-reverse\n                    -webkit-box-orient: horizontal args\n                    -webkit-box-direction: reverse args\n            for prefix in caniuse-prefixes( \"flexbox\" )\n                if prefix is \"moz\" and ks-support-firefox <= 20\n                    if value is row\n                        -moz-box-orient: vertical args\n                        -moz-box-direction: normal args\n                    if value is row-reverse\n                        -moz-box-orient: vertical args\n                        -moz-box-direction: reverse args\n                    if value is column\n                        -moz-box-orient: horizontal args\n                        -moz-box-direction: normal args\n                    if value is column-reverse\n                        -moz-box-orient: horizontal args\n                        -moz-box-direction: reverse args\n                else\n                    if value is row\n                        -{prefix}-flex-direction: unquote( \"row\" ) args\n                    else if value is column\n                        -{prefix}-flex-direction: unquote( \"column\" ) args\n                    else\n                        -{prefix}-flex-direction: value args\n        if value is row\n            flex-direction: unquote( \"row\" ) args\n        else if value is column\n            flex-direction: unquote( \"column\" ) args\n        else\n            flex-direction: value args\n\n    flex-flow( dir, wrap-type, args... )\n        if dir is row\n            dir = unquote( \"row\" )\n        if dir is column\n            dir = unquote( \"column\" )\n        if ks-vendors-prefixes isnt false and !( flex in ks-support-ignore-features ) and !( flexbox in ks-support-ignore-features )\n            for prefix in caniuse-prefixes( \"flexbox\" )\n                -{prefix}-flex-flow: dir wrap-type args\n        flex-flow: dir wrap-type args\n\n    flex-shrink()\n        ks-vendor( \"flex-shrink\", arguments, feature: \"flexbox\" )\n\n    flex-wrap()\n        ks-vendor( \"flex-wrap\", arguments, feature: \"flexbox\" )\n\n    flex()\n        ks-vendor( \"flex\", arguments, feature: \"flexbox\" )\n\n    align-content()\n        ks-vendor( \"align-content\", arguments, feature: \"flexbox\" )\n\n    align-items( value, args... )\n        if ks-vendors-prefixes isnt false and !( flex in ks-support-ignore-features ) and !( flexbox in ks-support-ignore-features )\n            if _ks-support-old-flex-implementation()\n                if value is flex-start\n                    -webkit-box-align: start args\n                else if value is flex-end\n                    -webkit-box-align: end args\n                else\n                    -webkit-box-align: value args\n            for prefix in caniuse-prefixes( \"flexbox\" )\n                if prefix is \"moz\" and ks-support-firefox <= 20\n                    if value is flex-start\n                        -moz-box-align: start args\n                    else if value is flex-end\n                        -moz-box-align: end args\n                    else\n                        -moz-box-align: value args\n                else\n                    -{prefix}-align-items: value args\n            align-items: value args\n\n    align-self()\n        ks-vendor( \"align-self\", arguments, feature: \"flexbox\" )\n","ks-position( pos, values )\n    if last( values ) == \"!important\"\n        _void = pop( values )\n        important = \"!important\"\n    else\n        important = \"\"\n    if pos == sticky\n        if !( \"css-sticky\" in ks-support-ignore-features )\n            for prefix in caniuse-prefixes( \"css-sticky\" )\n                position: unquote( \"-\" + prefix + \"-sticky \" + important )\n        else if ks-vendors-prefixes isnt false\n                if ks-vendors-prefixes isnt recommended\n                    prefixes = ks-vendors-prefixes\n                if prefixes\n                    for prefix in prefixes\n                        position: unquote( \"-\" + prefix + \"-sticky \" + important )\n        position: unquote( \"sticky \" + important )\n    else\n        position: pos unquote( important )\n    if length( values ) == 1 && values[ 0 ] != false\n        top: values[ 0 ] unquote( important )\n        right: values[ 0 ] unquote( important )\n        bottom: values[ 0 ] unquote( important )\n        left: values[ 0 ] unquote( important )\n    if length( values ) == 2\n        top: values[ 0 ] unquote( important ) if values[ 0 ] != false\n        right: values[ 1 ] unquote( important ) if values[ 1 ] != false\n        bottom: values[ 0 ] unquote( important ) if values[ 0 ] != false\n        left: values[ 1 ] unquote( important ) if values[ 1 ] != false\n    if length( values ) == 3\n        top: values[ 0 ] unquote( important ) if values[ 0 ] != false\n        right: values[ 1 ] unquote( important ) if values[ 1 ] != false\n        bottom: values[ 2 ] unquote( important ) if values[ 2 ] != false\n        left: values[ 1 ] unquote( important ) if values[ 1 ] != false\n    if length( values ) == 4\n        top: values[ 0 ] unquote( important ) if values[ 0 ] != false\n        right: values[ 1 ] unquote( important ) if values[ 1 ] != false\n        bottom: values[ 2 ] unquote( important ) if values[ 2 ] != false\n        left: values[ 3 ] unquote( important ) if values[ 3 ] != false\n\nks-static( values... )\n    ks-position( static, values )\n\nks-relative( values... )\n    ks-position( relative, values )\n\nks-absolute( values... )\n    ks-position( absolute, values )\n\nks-fixed( values... )\n    ks-position( fixed, values )\n\nks-sticky( values... )\n    ks-position( sticky, values )\n\nunless ks-no-conflict\n    static( values... )\n        ks-position( static, values )\n\n    relative( values... )\n        ks-position( relative, values )\n\n    absolute( values... )\n        ks-position( absolute, values )\n\n    fixed( values... )\n        ks-position( fixed, values )\n\n    sticky( values... )\n        ks-position( sticky, values )\n\n    position( value, values... )\n        ks-position( value, values )\n","ks-overflow( value, args... )\n    if value == ellipsis\n        white-space: nowrap\n        text-overflow: ellipsis\n        overflow: hidden\n    else\n        overflow: value args\n\noverflow = ks-overflow unless ks-no-conflict\n","@require \"../../node_modules/kouto-swiss/index.styl\"\n@require \"../../node_modules/axis/axis/index.styl\"\n\n// Kouto Swiss\nbox-sizing-reset()\nnormalize()\n\n\n\n// Layout\n\nhtml, body\n  height: 100%\n\n$slide-spacing = 1.5vw\n$slide-padding = 12% // Both sides\n$slide-font-size = 3vw\n\nfor i in 1..6\n  @media (min-width: (i*300)px)\n    $slides-in-row = i\n\n    .slide\n\n      // Adaptive padding\n      &:not(.presented)\n        padding: 0 ($slide-padding / $slides-in-row / 2);\n      &.presented\n        padding: 0 ($slide-padding / 2);\n      &::before, &::after\n        display: block;\n        content: \"\";\n        height: ($slide-padding / 2);\n\n\n      &:not(.presented)\n        font-size: ($slide-font-size / $slides-in-row * 0.875)\n\n        display: inline-block\n\n        width: \"calc(%s - %s)\" % \\\n          ((100 / $slides-in-row)% $slide-spacing)\n        height: \"calc(%s - %s)\" % \\\n          ((100 / $slides-in-row)% ($slide-spacing))\n\n\n.presentation\n  font-size: 1em\n  display: flex\n  flex-wrap: wrap\n  justify-content: flex-start\n  align-content: flex-start\n  padding-top: $slide-spacing\n  padding-left: $slide-spacing\n  height: 100%\n\n\n.slide\n\n  &:not(.presented)\n\n    display: inline-block\n\n    margin-bottom: $slide-spacing\n    margin-right: $slide-spacing\n\n    border: 1px solid alpha(#000, 0.125)\n\n    /* offset-x | offset-y | blur-radius | spread-radius | color */\n    box-shadow: 0px 0px ($slide-spacing) ($slide-spacing/4) alpha(#000, 0.125)\n\n    cursor: pointer;\n\n    overflow: auto;\n\n    // Fix spacing between inline blocks\n    .ie9 &\n      margin-left: -0.5em\n\n  &.presented\n    font-size: $slide-font-size\n\n    position: fixed\n\n    left: 0\n    top: 0\n    width: 100%\n    height: 100%\n    margin: 0em\n\n    border: none\n    background: white\n\n    overflow: auto\n\n\n.presenting\n  overflow: hidden\n\n\n// Content\n\n// Axis\n\n$font-stack = $helvetica-neue\n$font-size = 16\n$font-color = #333\n$default-color = $yellow\n\nbase()\n\n// Don't use Axis stuff related to font size for slide content, because Axis\n// likes to use rem and we want to use em, so everything inside the slide would\n// scale itself\n\n\n$h3-font-size = 1.3em\n\n-heading($level)\n  font-size: modular-scale($h3-font-size, 3 - $level)\n  text-rendering: optimizelegibility\n  font-weight: bold\n  margin: 0.125em 0\n  line-height: 1.4\n\n\nh1\n  -heading(1)\n\nh2\n  -heading(2)\n\nh3\n  -heading(3)\n\nh4\n  -heading(4)\n\nh5\n  -heading(5)\n\nh6\n  -heading(6)\n\n.large\n  font-size: 125%\n\nsmall, .small\n  font-size: 75%\n\na\n  color: blue\n  text-decoration: underline\n\n  &:hover\n    color: darken(@color, 20%)\n\n  &:visited\n    opacity: .8\n\np, li\n  paragraph(1em)\n  line-height: 1.2\n\nli\n  ol, ul\n    margin-left: 2em\n\nol\n  list-style-position: outside\n  padding-left: 0\n\n  & > li\n    margin-left: 1.25em;\n    text-indent: 0;\n\nul\n  list-style: none;\n  padding-left: 0;\n\n  & > li\n    padding-left: 1.25em;\n    text-indent: -1.25em;\n\n    &:before\n      content: \"— \";\n\n.right\n  float: right\n  width: 33%\n\nkbd\n  code: black\n\n.todo\n  background-color: $yellow\n","// ----------\n// Typography\n// ----------\n\n// Alias: Bold\n// It's just faster to type bold() than font-weight: bold\n\nbold()\n  font-weight: bold\n\n// Alias: Italic\n// It's just faster to type italic() than font-style: italic\n\nitalic()\n  font-style: italic\n\n// Alias: Normal\n// Put the font-weight and style back to normal\n\nnormal()\n  font-weight: normal\n  font-style: normal\n\n// Mixin: Raquo\n//\n// Because technically raquo is not semantic, it's better to add it like this.\n//\n// ex. raquo()\n\nraquo()\n  &:after\n    content: \" \\00BB\"\n\n// Mixin: Font Face\n//\n// Super simple font-face declaration. Just give the name and the folder it\n// lives in. Make sure the font name matches the name of the files. Uses the\n// fontspring syntax:\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n//\n// ex. font-face(proxima-nova, '/fonts')\n\nfont-face($name, $folder, $weight = 'normal', $style = 'normal')\n  @font-face\n    font-family: $name\n    src: url($folder unquote('/') $name unquote('.eot') '?#iefix') format('embedded-opentype'), url($folder unquote('/') $name unquote('.woff')) format('woff'), url($folder unquote('/') $name unquote('.ttf')) format('truetype'), url($folder unquote('/') $name unquote('.eot') unquote('#') $name) format('svg');\n    font-weight: unquote($weight)\n    font-style: unquote($style)\n\n\n// Mixin: Ellipsis\n// Truncate text to the width of its container...\n// ex: ellipsis()\n// ex: ellipsis: 300px\n\nellipsis($width = 100%)\n  white-space: nowrap\n  display: inline-block\n  max-width: $width\n  overflow: hidden\n  text-overflow: ellipsis\n  word-wrap: normal\n\n// Function: Line Height\n//\n// If there is a font-size set on the parent element, adjusts the line height to\n// match that. If not, it uses the base font-size to calculate the line-height.\n\n-line-height()\n  if @font-size\n    line-height: 1.6em\n  else\n    line-height: unit($font-size*1.6, 'px')\n    line-height: 1.6rem\n\n// Mixin: Text Margin\n//\n// Puts nice visually pleasing top and bottom margins on a paragraph of text.\n// Put a font-size on your element to have it adjust accordingly.\n//\n// ex. p\n//       font-size: 18px\n//       text-margin()\n\ntext-margin($size = $font-size)\n  if @font-size\n    margin: .75em 0\n  else\n    margin: unit($font-size*.75, 'px') 0\n\n// Mixin: Paragraph\n//\n// Sets a nice size, line-height, and margins on a paragraph of text. Pass a\n// size in to customize. Toggle margins off if you don't want them.\n//\n// ex. p()\n// ex. p: 18px\n// ex. p: 14px false\n\np($size = 1rem, $margins = true)\n  font-size: $size\n  text-margin() if $margins\n  -line-height()\n  open-type-ligatures() if $ligatures\n\n// Alias: paragraph\nparagraph = p\n\n// Alias: Font Size\n// An alias for 'font-size' with auto-fallback for rem.\n// ex. fs: 16px\n// ex. fs: 1.2rem\n\nfs($size)\n  if (unit($size) == 'rem')\n    font-size: round(unit(($font-size*$size), 'px'))\n    font-size: $size\n  else\n    font-size: $size\n\n// Alias: Uppercase\n// An alias for 'text-transform: uppercase'\n// ex. uppercase()\n\nuppercase()\n  text-transform: uppercase\n\n// Alias: Upcase\nupcase = uppercase\n\n// Alias: Lowercase\n// An alias for 'text-transform: lowercase'\n// ex. lowercase()\n\nlowercase()\n  text-transform: lowercase\n\n// Alias: Downcase\ndowncase = lowercase\n\n// Alias: Reset Case\n// Gets rid of an text transform\n// ex. reset-case()\n\nreset-case()\n  text-transform: none\n\n// Mixin: Small\n//\n// Makes your text smaller and a little lighter. Great on <small /> tags.\n//\n// ex. small()\n\nsmall()\n  font-size: 55%\n  opacity: .6\n  font-weight: normal\n\n// Function: Heading\n// For internal use within headings\n\n-heading($multiplier, $margins = true)\n  font-size: unit(($font-size*$multiplier), 'px')\n  font-size: unit($multiplier, 'rem')\n  text-rendering: optimizelegibility\n  font-weight: bold\n  text-margin() if $margins\n  -line-height()\n  openTypeLigatures() if $ligatures\n\n// Mixin Set: h1, h2, h3, h4, h5, h6\n//\n// These provide nice defaults for headings based off the default font size.\n// The can scale infinitely, and work best when matched to their corresponding\n// html elements. If you'd like to change the base size of a header, just pass\n// it as an option.\n//\n// ex. h3()\n// ex. h3: 3.5\n\nh1($size=2.4)\n  -heading($size)\n\nh2($size=1.8)\n  -heading($size)\n\nh3($size=1.5)\n  -heading($size)\n\nh4($size=1.3)\n  -heading($size)\n\nh5($size=1.0)\n  -heading($size)\n\nh6($size=0.9)\n  -heading($size)\n  upcase()\n\n// Mixin: Link\n//\n// A nice default style for links. Accepts a color and a style. Color can be\n// anything, style can be underline, darken, lighten, or glow, each giving it a\n// different style of interaction when hovered. More suggestions here welcome.\n//\n// ex. link()\n// ex. link: green\n// ex. link: #57777E 'glow'\n\nlink($color = $blue, $style = 'underline')\n  color: $color\n  text-decoration: none\n  transition()\n\n  if $style == 'underline'\n    hover-underline()\n    &:hover\n      color: darken(@color, 15%)\n  else if $style == 'darken'\n    &:hover\n      color: darken(@color, 20%)\n  else if $style == 'lighten'\n    hover-lighten()\n  else if $style == 'glow'\n    &:hover\n      text-shadow: 0 0 7px rgba(@color, .6)\n\n  &:visited\n    opacity: .8\n\n// Mixin: Reset Link\n//\n// Sometimes my link mixin of the browser defaults will give you questionable\n// link defaults that you don't want on certain elements. This guy gets rid of\n// that.\n\n// ex. reset-link()\n\nreset-link()\n  border: none\n  text-decoration: none\n  color: initial\n\n  &:hover\n    border: none\n    text-decoration: none\n    color: initial\n\n  &:visited\n    opacity: 1\n\n// Mixin: Text Selection\n//\n// This guy sets the text select color intelligently based on the\n// highlight-color variable found in the settings file. If you really want, you\n// can pass it a color override too.\n\n// ex. text-selection()\n\ntext-selection($color = $highlight-color, $text-color = null)\n\n  $text-color = (light($color) ? white : #494949) unless $text-color\n\n  &::-moz-selection\n    background: $color\n    color: $text-color\n\n  &::selection\n    background: $color\n    color: $text-color\n\n// Mixin: Ul\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to disc. Use this on a ul element por favor.\n//\n// ex. ul()\n// ex. ul: 'square'\n\nul($style = 'disc')\n  margin: 5px 15px\n  margin: 0.32rem 0.94rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote($style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Ol\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to decimal. Use this on a ol element por favor.\n//\n// ex. ol()\n// ex. ol: 'upper-roman'\n\nol($style = 'decimal')\n  margin: 5px 18px\n  margin: 0.32rem 1.125rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote($style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Inline List\n//\n// For when you need your list to be horizontal. Pass it the spacing you want\n// between list elements, whatever units you'd like. Defaults to 20px.\n//\n// ex. inline-list()\n// ex. inline-list: 15px\n\ninline-list($spacing = 20px)\n  group()\n  margin: 0\n  padding: 0\n\n  li\n    float: left\n    margin-right: $spacing\n    list-style-type: none\n\n  li:last-child\n    margin-right: 0\n\n// Mixin: Reset List\n//\n// If you're tired of all the list shenanigans and want to get rid of them for\n// this special list you're working on, this is your guy. Resets the margins,\n// padding, and style.\n//\n// ex. reset-list()\n\nreset-list()\n  margin: 0\n  padding: 0\n\n  li\n    float: none\n    list-style-type: none\n    padding: 0\n    margin: 0\n\n// Mixin: Blockquote\n//\n// Nice styles for a blockquote, and even puts a nice hyphen in before your\n// citation. Use with a <p> and <cite>, <footer>, or <figcaption> inside for\n// best results. Pass a color or 'none' to set the left border.\n//\n// ex. blockquote()\n\nblockquote($color = $blue)\n  border-left: 4px solid $color\n  margin: 1em 0\n  padding-left: 1.5em\n  group()\n\n  > p\n    font-weight: 300\n    font-size: 127%\n    font-size: 1.27rem\n    line-height: 127%\n    line-height: 1.27rem\n    margin-top: 0\n\n  > cite, > footer, > figcaption\n    color: #888888\n    &:before\n      content: '\\2014'\n\n// Alias: blockquo\nblockquo = blockquote\n\n// Hyphenation\n//\n// Hyphenation is the better word-break. It’s locale aware, and inserts the\n// hyphen character at the correct place, when breaking the words. This is\n// especially important in responsive designs. It will save you from a lot of\n// ragged lines. And, no need anymore for clunky & slow Javascript hyphenation\n// fallbacks. Taken from http://www.newnet-soft.com/blog/csstypography\n//\n// ex. hyphenation()\n\nhyphenation()\n    -ms-word-break: break-all\n    word-break:     break-all\n    word-break:     break-word // webkit\n    hyphens: auto // none, auto, <number>\n    -webkit-hyphenate-before: 2\n    -webkit-hyphenate-after:  3\n    hyphenate-lines:          3\n\n// Mixin: Shadow Stroke\n//\n// Creates a text outline using text-shadow. Ported from nib.\n// Takes a color.\n//\n// ex: shadow-stroke()\n// ex: sahdow-stroke(red)\n\nshadow-stroke($color = $blue)\n  text-shadow: -1px -1px 0 $color, 1px -1px 0 $color, -1px 1px 0 $color, 1px 1px 0 $color\n\n// Additive Mixin: Base\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// This is an essential mixin. You want this on your page. Sets your font stack,\n// size, and colors based on the settings file and makes sure that your text is\n// a great looking as possible. You can override any of the params, but there is\n// really no reason to.\n//\n// ex. base()\n\nbase($fonts = $font-stack, $size = $font-size, $color = $font-color)\n  html\n    font-size: unit($size, 'px')\n    font-size: unit(($size/16)*100, \"%\")\n\n  body\n    font-family: $fonts\n    color: $color\n    -webkit-font-smoothing: antialiased\n    -webkit-text-size-adjust: 100%\n    -ms-text-size-adjust: 100%\n    font-size-adjust: auto\n\n// Additive Mixin: Headers\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' wonderful scaling header styles to your <hx> tags.\n//\n// ex. headers()\n\nheaders()\n  h1\n    h1()\n\n  h2\n    h2()\n\n  h3\n    h3()\n\n  h4\n    h4()\n\n  h5\n    h5()\n\n  h6\n    h6()\n\n// Additive Mixin: Lists\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to ul and ols.\n//\n// ex. lists()\n\nlists()\n  ul\n    ul()\n  ol\n    ol()\n\n// Additive Mixin: Bold-Italic\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds bold and italic styles to the right tags if you did a global reset.\n//\n// ex. bold-italic()\n\nbold-italic()\n  b\n    bold()\n  i\n    italic()\n  strong\n    bold()\n  em\n    italic()\n\n// Additive Mixin: Typography\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to bold and italic elements, headers, paragrapgs, small\n// text, links, lists, and blockquotes. Got all your basic elements covered.\n//\n// ex. typography()\n\ntypography()\n  bold-italic()\n  headers()\n  lists()\n  text-selection()\n\n  p\n    paragraph()\n\n  small\n    small()\n\n  a[href]:not([class])\n    link()\n\n  blockquote\n    blockquo()\n\n  .hyphenation\n    hyphenation()\n","// ----\n// Code\n// ----\n\n// Mixin: Code\n//\n// Styles inline code snippets on your page. Defaults to a beautiful red, but\n// can be passed any color.\n//\n// ex. code: blue\n// ex. code: #7ED45F\n\ncode($color = #DF5C33)\n  padding: 3px 4px\n  color: $color\n  background-color: #F5F5F5\n  border: 1px solid #E1E1E8\n  border-radius: 3px\n  font-family: Menlo, Monaco, $monospace\n\n// Mixin: Pre\n//\n// Styles code blocks on your page. Syntax highlighting to be included in the\n// future. Takes no arguments.\n//\n// ex. pre()\n\npre()\n  display: block\n  padding: 7px\n  background-color: #F5F5F5\n  border: 1px solid #E1E1E8\n  border-radius: 3px\n  white-space: pre-wrap\n  word-break: break-all\n  font-family: Menlo, Monaco, $monospace\n  line-height: 160%\n\n// Additive Mixin: Code Blocks\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots styles by default to <code> and <pre> tags.\n\ncode-blocks()\n  code\n    code()\n  pre\n    pre()\n"]}